//
// Mixins: Custom Buttons
//

// Custom Buttons Variant

@mixin custom-button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
	color: color-yiq($background);
	position: relative;
	@include gradient-bg($background);
	border-color: $border;
	@include box-shadow($btn-box-shadow);

	@include hover() {
		color: color-yiq($hover-background);
		//@include gradient-bg($hover-background);
		border-color: $hover-border;
	}

	&:focus,
	&.focus {
		color: color-yiq($hover-background);
		@include gradient-bg($hover-background);
		border-color: $hover-border;
		@if $enable-shadows {
			@include box-shadow($btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), 0.5));
		} @else {
			// Avoid using mixin so we can pass custom focus shadow properly
			box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), 0.5);
		}
	}

	// Disabled comes first so active can properly restyle
	&.disabled,
	&:disabled {
		color: color-yiq($background);
		background-color: $background;
		border-color: $border;
		// Remove CSS gradients if they're enabled
		@if $enable-gradients {
			background-image: none;
		}
	}

	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active,
	.show > &.dropdown-toggle {
		color: color-yiq($active-background);
		background-color: $active-background;
		@if $enable-gradients {
			background-image: none; // Remove the gradient for the pressed/active state
		}
		border-color: $active-border;

		&:focus {
			@if $enable-shadows and $btn-active-box-shadow != none {
				@include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), 0.5));
			} @else {
				// Avoid using mixin so we can pass custom focus shadow properly
				box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), 0.5);
			}
		}
	}

	&::after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		width: 0;
        background-color: rgba($white, 0.1);
        border-radius: inherit;
		@include transition(all $transition-speed $transition-fn);
	}
	&:hover {
		&::after {
			width: 100%;
		}
	}
}
